let CreateProduct,multer,path,CustomErrorHandler,Joi,fs;_c35‍.x([["default",()=>_c35‍.o]]);_c35‍.w("../../models",[["CreateProduct",["CreateProduct"],function(v){CreateProduct=v}]]);_c35‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_c35‍.w("path",[["default",["path"],function(v){path=v}]]);_c35‍.w("../../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_c35‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_c35‍.w("fs",[["default",["fs"],function(v){fs=v}]]);






const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, "uploads/"),
  filename: (req, file, cb) => {
    const uniqueName = `${Date.now()}-${Math.round(
      Math.random() * 1e9
    )}${path.extname(file.originalname)}`;

    cb(null, uniqueName);
  },
});

const handleMultipartData = multer({
  storage,
  limits: { fileSize: 1000000 * 5 }, // 5MB
}).single("image");

const createProductControllers = {
  async create(req, res, next) {
    // Multer is a node.js middleware for handling multipart/form-data
    handleMultipartData(req, res, async (err) => {
      if (err) {
        return next(CustomErrorHandler.serverError(err.message));
      }
      _c35‍.g.console.log(req);
      const filePath = req.file.path;

      // validate the request
      const productSchema = Joi.object({
        name: Joi.string().required(),
        price: Joi.number().required(),
        size: Joi.string().required(),
      });

      const { error } = productSchema.validate(req.body);
      if (error) {
        // delete the uploaded file
        fs.unlink(`${appRoot}/${filePath}`, (err) => {
          return next(CustomErrorHandler.serverError(err.message));
        });

        return next(error);
      }

      const { name, price, size } = req.body;
      let document;

      try {
        document = await CreateProduct.create({
          name,
          price,
          size,
          image: filePath,
        });
      } catch (err) {
        return next(err);
      }

      res.status(201).json(document);
    });
  },
};

_c35‍.d(createProductControllers);
